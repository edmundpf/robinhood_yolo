{
  "version": 3,
  "file": "endpoints.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "endpoints.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "p = require 'print-tools-js'\nqueryStr = require('./miscFunctions').queryStr\n\n#: Api URL\n\napi = 'https://api.robinhood.com'\n\n#: Endpoints Object\n\nendpoints =\n\n\tapi: (path) ->\n\t\treturn \"#{api}#{path}\"\n\n\t#: Login\n\n\tlogin: ->\n\t\treturn \"#{api}/oauth2/token/\"\n\n\t#: Accounts\n\n\taccounts: ->\n\t\treturn \"#{api}/accounts/\"\n\n\t#: Markets\n\n\tmarketHours: (date) ->\n\t\treturn \"#{api}/markets/XNYS/hours/#{date}/\"\n\n\t#: Transfers\n\n\ttransfers: ->\n\t\treturn \"#{api}/ach/transfers/\"\n\n\t#: Get all orders or fetch by Order ID\n\n\torders: (id) ->\n\t\treturn \"#{api}/orders/#{id}/\"\n\n\t#: Get Quotes for stock or list of stocks\n\n\tquotes: (symbols) ->\n\t\tif Array.isArray(symbols)\n\t\t\tsymbols = symbols.join(',')\n\t\t\treturn \"#{api}/quotes/?symbols=#{symbols}\"\n\t\telse\n\t\t\treturn \"#{api}/quotes/#{symbols}/\"\n\n\t#: Get Historical Quotes for stock or list of stocks.\n\t### ------------------------------------------------\n\t# interval/span configs:\n\t# \t5minute | day\n\t# \t10minute | week\n\t# \thour | month\n\t# \tday | year\n\t# \tweek | 5year\n\t# bounds:\n\t# \tregular, extended\n\t###\n\n\thistoricals: (symbols, interval='day', span='year', bounds='regular') ->\n\t\tif Array.isArray(symbols)\n\t\t\tsymbols = symbols.join(',')\n\t\tquery = queryStr(\n\t\t\tsymbols: symbols\n\t\t\tinterval: interval\n\t\t\tspan: span\n\t\t\tbound: bounds\n\t\t)\n\t\treturn \"#{api}/quotes/historicals/#{query}/\"\n\n\t#: Get Option Chains\n\n\tchain: (instrumentId) ->\n\t\treturn \"#{api}/options/chains/?equity_instrument_ids=#{instrumentId}\"\n\n\t#: Get Options\n\n\toptions: (chainId, dates, option_type='call') ->\n\t\tquery = queryStr(\n\t\t\tchain_id: chainId\n\t\t\texpiration_dates: dates\n\t\t\tstate: 'active'\n\t\t\ttradability: 'tradable'\n\t\t\ttype: option_type\n\t\t)\n\t\treturn \"#{api}/options/instruments/#{query}\"\n\n\t#: Get Options Positions\n\n\toptionsPositions: ->\n\t\treturn \"#{api}/options/positions/\"\n\n\t#: Get Options Orders\n\n\toptionsOrders: (id) ->\n\t\tif id?\n\t\t\treturn \"#{api}/options/orders/#{id}/\"\n\t\telse\n\t\t\treturn \"#{api}/options/orders/\"\n\n\t#: Get Market Data\n\tmarketData: (optionId) ->\n\t\treturn \"#{api}/marketdata/options/#{optionId}/\"\n\n#: Exports\n\nmodule.exports = endpoints\n\n#::: End Program :::"
  ]
}