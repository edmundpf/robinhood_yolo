{
  "version": 3,
  "file": "apiMaster.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "apiMaster.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "p = require 'print-tools-js'\nuuid = require 'uuid/v4'\nassert = require 'assert'\nendpoints = require './endpoints'\nrequest = require 'request-promise'\nconfigData = require '../data/config.json'\nb64Dec = require('./miscFunctions').b64Dec\nupdateJson = require('./miscFunctions').updateJson\ndetPrint = require('./miscFunctions').detPrint\nroundNum = require('./miscFunctions').roundNum\nsortOptions = require('./miscFunctions').sortOptions\n\n#: API Object\n\nclass Api\n\n\t#: Constructor\n\n\tconstructor: (args={ newLogin: false, configIndex: 0, print: false }) ->\n\t\targs = {\n\t\t\tnewLogin: false\n\t\t\tconfigIndex: 0\n\t\t\tprint: false\n\t\t\t...args\n\t\t}\n\t\tthis.headers =\n\t\t\tAccept: '*/*'\n\t\t\tConnection: 'keep-alive'\n\t\t\t'Accept-Encoding': 'gzip, deflate'\n\t\t\t'Accept-Language': 'en;q=1, fr;q=0.9, de;q=0.8, ja;q=0.7, nl;q=0.6, it;q=0.5'\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\n\t\t\t'X-Robinhood-API-Version': '1.0.0'\n\t\t\t'User-Agent': 'Robinhood/823 (iPhone; iOS 7.1.2; Scale/2.00)'\n\t\tthis.clientId = 'c82SH0WZOsabOXGP2sxqcj34FxkvfnWRZBKlBjFS'\n\t\tthis.session = request.defaults(\n\t\t\tjar: true\n\t\t\tgzip: true\n\t\t\tjson: true\n\t\t\ttimeout: 2000\n\t\t\theaders: this.headers\n\t\t)\n\t\tthis.configIndex = args.configIndex\n\t\tthis.newLogin = args.newLogin\n\t\tthis.print = args.print\n\n\t#: Login Flow\n\n\tlogin: (args={ newLogin: false, configIndex: 0 }) ->\n\t\targs = {\n\t\t\tnewLogin: false\n\t\t\tconfigIndex: 0\n\t\t\t...args\n\t\t}\n\t\ttry\n\t\t\tif args.newLogin?\n\t\t\t\tthis.newLogin = args.newLogin\n\t\t\tawait this.auth(\n\t\t\t\tnewLogin: args.newLogin\n\t\t\t\tconfigIndex: args.configIndex\n\t\t\t)\n\t\t\tif this.print\n\t\t\t\tp.success(\"#{this.username} logged in.\")\n\t\t\treturn true\n\t\tcatch error\n\t\t\tif this.print\n\t\t\t\tp.error(\"#{this.username} could not login.\")\n\t\t\t\tdetPrint(error)\n\t\t\tthrow error\n\n\t#: Authentification\n\n\tauth: (args={ newLogin: false, configIndex: 0 }) ->\n\t\ttry\n\t\t\targs = {\n\t\t\t\tnewLogin: false\n\t\t\t\tconfigIndex: 0\n\t\t\t\t...args\n\t\t\t}\n\t\t\tthis.configIndex = args.configIndex\n\t\t\tthis.username = b64Dec(configData[this.configIndex].u_n)\n\t\t\tif (Date.now() > configData[this.configIndex].t_s + 86400000) || args.newLogin\n\t\t\t\tres = await this.postUrl(\n\t\t\t\t\tendpoints.login(),\n\t\t\t\t\tgrant_type: 'password'\n\t\t\t\t\tclient_id: this.clientId\n\t\t\t\t\tdevice_token: b64Dec(configData[this.configIndex].d_t)\n\t\t\t\t\tusername: this.username\n\t\t\t\t\tpassword: b64Dec(configData[this.configIndex].p_w)\n\t\t\t\t)\n\t\t\t\tthis.accessToken = res.access_token\n\t\t\t\tthis.refreshToken = res.refresh_token\n\t\t\t\tthis.authToken = \"Bearer #{this.accessToken}\"\n\t\t\t\tthis.session = this.session.defaults(\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t...this.headers,\n\t\t\t\t\t\tAuthorization: this.authToken\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\taccUrl = await this.getAccount()\n\t\t\t\tthis.accountUrl = accUrl.url\n\t\t\t\tObject.assign(\n\t\t\t\t\tconfigData[this.configIndex],\n\t\t\t\t\ta_t: this.accessToken\n\t\t\t\t\tr_t: this.refreshToken\n\t\t\t\t\ta_b: this.authToken\n\t\t\t\t\ta_u: this.accountUrl\n\t\t\t\t\tt_s: Date.now()\n\t\t\t\t)\n\t\t\t\tupdateJson(\n\t\t\t\t\t'../data/config.json',\n\t\t\t\t\tconfigData\n\t\t\t\t)\n\t\t\telse\n\t\t\t\tthis.accessToken = configData[this.configIndex].a_t\n\t\t\t\tthis.refreshToken = configData[this.configIndex].r_t\n\t\t\t\tthis.authToken = configData[this.configIndex].a_b\n\t\t\t\tthis.accountUrl = configData[this.configIndex].a_u\n\t\t\t\tthis.session = this.session.defaults(\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t...this.headers,\n\t\t\t\t\t\tAuthorization: this.authToken\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\treturn true\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Account Info\n\n\tgetAccount: ->\n\t\ttry\n\t\t\tdata = await this.getUrl(endpoints.accounts(), true)\n\t\t\treturn data[0]\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Transfers\n\n\tgetTransfers: ->\n\t\ttry\n\t\t\treturn await this.getUrl(endpoints.transfers(), true)\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Market Hours\n\n\tgetMarketHours: (date) ->\n\t\ttry\n\t\t\treturn await this.getUrl(endpoints.marketHours(date))\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Quotes\n\n\tquotes: (symbols, args={ chainData: false }) ->\n\t\ttry\n\t\t\targs = {\n\t\t\t\tchainData: false\n\t\t\t\t...args\n\t\t\t}\n\t\t\tif !Array.isArray(symbols)\n\t\t\t\tdata = await this.getUrl(endpoints.quotes(symbols))\n\t\t\telse\n\t\t\t\tdata = await this.getUrl(endpoints.quotes(symbols), true)\n\t\t\tif !Array.isArray(data)\n\t\t\t\tdata = [data]\n\t\t\tif args.chainData\n\t\t\t\tfor obj in data\n\t\t\t\t\tobj.instrument_data = await this.getUrl(obj.instrument)\n\t\t\t\t\tobj.chain_data = await this.chain(obj.instrument_data.id)\n\t\t\tif !Array.isArray(symbols)\n\t\t\t\treturn data[0]\n\t\t\treturn data\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Historicals\n\n\thistoricals: (symbols, args={ interval: 'day', span: 'year', bounds: 'regular' }) ->\n\t\ttry\n\t\t\targs = {\n\t\t\t\tinterval: 'day'\n\t\t\t\tspan: 'year'\n\t\t\t\tbounds: 'regular'\n\t\t\t\t...args\n\t\t\t}\n\t\t\tdata = await this.getUrl(endpoints.historicals(symbols, args.interval, args.span, args.bounds))\n\t\t\tif !Array.isArray(symbols)\n\t\t\t\treturn data.results[0].historicals\n\t\t\telse\n\t\t\t\tsymbolData = []\n\t\t\t\tfor arr in data.results\n\t\t\t\t\tsymbolData.push(arr.historicals)\n\t\t\t\treturn symbolData\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Instrument Data\n\n\tchain: (instrumentId) ->\n\t\ttry\n\t\t\treturn await this.getUrl(endpoints.chain(instrumentId), true)\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Market Data\n\n\tmarketData: (optionId) ->\n\t\ttry\n\t\t\treturn await this.getUrl(endpoints.marketData(optionId))\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Options\n\n\tgetOptions: (symbol, expirationDate, args={ optionType: 'call', marketData: false }) ->\n\t\ttry\n\t\t\targs = {\n\t\t\t\toptionType: 'call'\n\t\t\t\tmarketData: false\n\t\t\t\t...args\n\t\t\t}\n\t\t\tchainId\n\t\t\tchainData = await this.quotes(symbol, { chainData: true })\n\t\t\tchainData = chainData.chain_data\n\t\t\tfor ticker in chainData\n\t\t\t\tif ticker.symbol == symbol\n\t\t\t\t\tchainId = ticker.id\n\t\t\tdata = await this.getUrl(endpoints.options(chainId, expirationDate, args.optionType), true)\n\t\t\tif args.marketData\n\t\t\t\tfor obj in data\n\t\t\t\t\tobj.market_data = await this.marketData(obj.id)\n\t\t\treturn data\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Find Options\n\n\tfindOptions: (symbol, expirationDate, args={ optionType: 'call', strikeType: 'itm', strikeDepth: 0, marketData: false, range: null, strike: null }) ->\n\t\ttry\n\t\t\targs = {\n\t\t\t\toptionType: 'call'\n\t\t\t\tstrikeType: 'itm'\n\t\t\t\tstrikeDepth: 0\n\t\t\t\tmarketData: false\n\t\t\t\trange: null\n\t\t\t\tstrike: null\n\t\t\t\t...args\n\t\t\t}\n\t\t\tcurTime = new Date()\n\t\t\tdateNum = (curTime.getHours() * 10000) + (curTime.getMinutes() * 100) + curTime.getSeconds()\n\t\t\toptions = await this.getOptions(symbol, expirationDate, { optionType: args.optionType })\n\t\t\toptions.sort(sortOptions)\n\t\t\tif args.strike?\n\t\t\t\targs.strike = roundNum(args.strike)\n\t\t\tquote = await this.quotes(symbol)\n\t\t\tif dateNum > 93000\n\t\t\t\tquote = roundNum(quote.last_trade_price)\n\t\t\telse\n\t\t\t\tquote = roundNum(quote.last_extended_hours_trade_price)\n\t\t\titmIndex\n\t\t\tfor i in [0...options.length]\n\t\t\t\tstrikePrice = roundNum(options[i].strike_price)\n\t\t\t\tif strikePrice == quote || strikePrice == args.strike\n\t\t\t\t\titmIndex = i\n\t\t\t\t\tbreak\n\t\t\t\telse if args.optionType == 'call' && strikePrice < quote\n\t\t\t\t\titmIndex = i\n\t\t\t\t\tbreak\n\t\t\t\telse if args.optionType == 'put' && strikePrice < quote\n\t\t\t\t\titmIndex = i - 1\n\t\t\t\t\tbreak\n\t\t\tif !args.range? && !args.strike?\n\t\t\t\tif args.optionType == 'call' && args.strikeType == 'itm'\n\t\t\t\t\toptions = [options[itmIndex + args.strikeDepth]]\n\t\t\t\telse if args.optionType == 'call' && args.strikeType == 'otm'\n\t\t\t\t\toptions = [options[itmIndex - 1 - args.strikeDepth]]\n\t\t\t\telse if args.optionType == 'put' && args.strikeType == 'itm'\n\t\t\t\t\toptions = [options[itmIndex - args.strikeDepth]]\n\t\t\t\telse if args.optionType == 'put' && args.strikeType == 'otm'\n\t\t\t\t\toptions = [options[itmIndex + 1 + args.strikeDepth]]\n\t\t\telse if args.range?\n\t\t\t\toptions = options.slice(itmIndex - args.range, itmIndex + args.range)\n\t\t\telse if args.strike?\n\t\t\t\toptions = [options[itmIndex]]\n\t\t\tif args.marketData\n\t\t\t\tfor obj in options\n\t\t\t\t\tobj.market_data = await this.marketData(obj.id)\n\t\t\tif !args.range?\n\t\t\t\treturn options[0]\n\t\t\telse\n\t\t\t\treturn options\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Options Postions\n\n\toptionsPositions: (args={ marketData: false, orderData: false, openOnly: true, notFilled: false }) ->\n\t\ttry\n\t\t\targs = {\n\t\t\t\tmarkedData: false\n\t\t\t\torderData: false\n\t\t\t\topenOnly: true\n\t\t\t\tnotFilled: false\n\t\t\t\t...args\n\t\t\t}\n\t\t\tdata = await this.getUrl(endpoints.optionsPositions(), true)\n\t\t\tif args.openOnly\n\t\t\t\topenData = []\n\t\t\t\tfor pos in data\n\t\t\t\t\tif Number(pos.quantity) > 0\n\t\t\t\t\t\topenData.push(pos)\n\t\t\t\tdata = openData\n\t\t\tif args.orderData\n\t\t\t\torders = []\n\t\t\t\tfor obj in data\n\t\t\t\t\torders.push(obj.option)\n\t\t\t\tif !args.notFilled\n\t\t\t\t\torderData = await this.optionsOrders({ urls: orders, buyOnly: true })\n\t\t\t\t\tfor obj in data\n\t\t\t\t\t\tfor key, value of orderData\n\t\t\t\t\t\t\tif obj.option == key\n\t\t\t\t\t\t\t\tobj.order_data = value\n\t\t\t\t\t\t\t\tdelete orderData[key]\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\telse if args.notFilled\n\t\t\t\t\tnotFilled = []\n\t\t\t\t\torderData = await this.optionsOrders({ notFilled: true })\n\t\t\t\t\tbreakLoop = false\n\t\t\t\t\tfor obj in orderData\n\t\t\t\t\t\tfor arg in data\n\t\t\t\t\t\t\tfor leg in obj.legs\n\t\t\t\t\t\t\t\tbreakLoop = false\n\t\t\t\t\t\t\t\tif leg.option == arg.option\n\t\t\t\t\t\t\t\t\tbreakLoop = true\n\t\t\t\t\t\t\t\t\targ.order_data = obj\n\t\t\t\t\t\t\t\t\tnotFilled.push(arg)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tif breakLoop\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\tdata = notFilled\n\t\t\tif args.marketData\n\t\t\t\toptions = []\n\t\t\t\tfor obj in data\n\t\t\t\t\tobj.option_data = await this.getUrl(obj.option)\n\t\t\t\t\tobj.market_data = await this.marketData(obj.option_data.id)\n\t\t\treturn data\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Options Orders\n\n\toptionsOrders: (args={ urls: null, id: null, notFilled: false, buyOnly: false }) ->\n\t\ttry\n\t\t\tdata\n\t\t\targs = {\n\t\t\t\turls: null\n\t\t\t\tid: null\n\t\t\t\tnotFilled: false\n\t\t\t\tbuyOnly: false\n\t\t\t\t...args\n\t\t\t}\n\t\t\tif args.id?\n\t\t\t\treturn await this.getUrl(endpoints.optionsOrders(args.id))\n\t\t\tif args.urls?\n\t\t\t\tfetchOrders = (data, options) ->\n\t\t\t\t\tresults = {}\n\t\t\t\t\tbreakLoop = false\n\t\t\t\t\tif !Array.isArray(options.args)\n\t\t\t\t\t\toptions.args = [options.args]\n\t\t\t\t\tfor arg in options.args\n\t\t\t\t\t\tfor obj in data\n\t\t\t\t\t\t\tfor leg in obj.legs\n\t\t\t\t\t\t\t\tbreakLoop = false\n\t\t\t\t\t\t\t\tif leg.option == arg\n\t\t\t\t\t\t\t\t\tif options.mod && obj.direction == 'debit' && leg.side == 'buy'\n\t\t\t\t\t\t\t\t\t\tbreakLoop = true\n\t\t\t\t\t\t\t\t\t\tresults[arg] = obj\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\telse if !options.mod\n\t\t\t\t\t\t\t\t\t\tbreakLoop = true\n\t\t\t\t\t\t\t\t\t\tresults[arg] = obj\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tif breakLoop\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\treturn results\n\n\t\t\t\tdata = await this.getDataFromUrl(\n\t\t\t\t\tendpoints.optionsOrders(),\n\t\t\t\t\tfetchOrders,\n\t\t\t\t\targs: args.urls\n\t\t\t\t\tmod: args.buyOnly\n\t\t\t\t)\n\t\t\telse\n\t\t\t\tdata = await this.getUrl(\n\t\t\t\t\tendpoints.optionsOrders(),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\tif args.notFilled\n\t\t\t\tnotFilled = []\n\t\t\t\tif !Array.isArray(data)\n\t\t\t\t\tdata = [data]\n\t\t\t\tfor order in data\n\t\t\t\t\tif order.cancel_url?\n\t\t\t\t\t\tnotFilled.push(order)\n\t\t\t\tdata = notFilled\n\t\t\treturn data\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Place Option Order\n\n\tplaceOptionOrder: (option, quantity, price, args={ direction: 'debit', side: 'buy', positionEffect: 'open', legs: null }) ->\n\t\ttry\n\t\t\tlegs\n\t\t\targs = {\n\t\t\t\tdirection: 'debit'\n\t\t\t\tside: 'buy'\n\t\t\t\tpositionEffect: 'open'\n\t\t\t\tlegs: null\n\t\t\t\t...args\n\t\t\t}\n\n\t\t\tassert(typeof option == 'string')\n\t\t\tassert(!isNaN(quantity))\n\t\t\tassert(!isNaN(price))\n\t\t\tassert(['debit', 'credit'].includes(args.direction))\n\t\t\tassert(['buy', 'sell'].includes(args.side))\n\t\t\tassert(['open', 'close'].includes(args.positionEffect))\n\t\t\tif !args.legs?\n\t\t\t\tlegs = [\n\t\t\t\t\toption: option\n\t\t\t\t\tside: args.side\n\t\t\t\t\tposition_effect: args.positionEffect\n\t\t\t\t\tratio_quantity: 1\n\t\t\t\t]\n\t\t\telse\n\t\t\t\tlegs = args.legs\n\n\t\t\ttry\n\t\t\t\tif option == 'null' && args.direction == 'credit' && legs[0].side == 'sell'\n\t\t\t\t\tp.warning('Will sleep before placing sell order...')\n\t\t\t\t\tawait sleep(1000)\n\t\t\t\treturn await this.placeOrderFlow(quantity, price, args, legs)\n\t\t\tcatch error\n\t\t\t\tif error.statusCode == 400 && error.error? && error.error.detail? && error.error.detail.includes('order is invalid')\n\t\t\t\t\tp.error('Could not place sell order, will sleep and try again...')\n\t\t\t\t\tawait sleep(1000)\n\t\t\t\t\treturn await this.placeOrderFlow(quantity, price, args, legs)\n\t\t\t\telse\n\t\t\t\t\tthrow error\n\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Cancel Option Order\n\n\tcancelOptionOrder: (cancelUrl) ->\n\t\ttry\n\t\t\tassert(typeof cancelUrl == 'string')\n\t\t\tdata = await this.postUrl(cancelUrl, {})\n\t\t\tif data = {}\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Replace Option Order\n\n\treplaceOptionOrder: (quantity, price, args={ order: null, orderId: null }) ->\n\t\ttry\n\t\t\tdata\n\t\t\targs = {\n\t\t\t\torder: null\n\t\t\t\torderId: null\n\t\t\t\t...args\n\t\t\t}\n\t\t\tassert(args.order? || args.orderId?)\n\t\t\tif !args.order? && args.orderId?\n\t\t\t\tdata = await this.optionsOrders({ id: args.orderId })\n\t\t\telse\n\t\t\t\tdata = args.order\n\t\t\tif await this.cancelOptionOrder(data.cancel_url)\n\t\t\t\treturn await this.placeOptionOrder(\n\t\t\t\t\t'null'\n\t\t\t\t\tquantity\n\t\t\t\t\tprice\n\t\t\t\t\tdirection: data.direction\n\t\t\t\t\tlegs: data.legs\n\t\t\t\t)\n\t\t\telse\n\t\t\t\treturn false\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Place Order Flow\n\n\tplaceOrderFlow: (quantity, price, args, legs) ->\n\t\treturn await this.postUrl(\n\t\t\tendpoints.optionsOrders()\n\t\t\taccount: this.accountUrl\n\t\t\tdirection: args.direction\n\t\t\tlegs: legs\n\t\t\tprice: price\n\t\t\tquantity: quantity\n\t\t\ttime_in_force: 'gfd'\n\t\t\ttrigger: 'immediate'\n\t\t\ttype: 'limit'\n\t\t\toverride_day_trade_checks: false\n\t\t\toverride_dtbp_checks: false\n\t\t\tref_id: uuid()\n\t\t)\n\n\t#: Get URL\n\n\tgetUrl: (url, consume=false) ->\n\t\ttry\n\t\t\tif !consume\n\t\t\t\treturn await this.session.get(\n\t\t\t\t\turi: url\n\t\t\t\t)\n\t\t\telse\n\t\t\t\tdata = await this.session.get(\n\t\t\t\t\turi: url\n\t\t\t\t)\n\t\t\t\tpages = data.results\n\t\t\t\twhile data.next?\n\t\t\t\t\tdata = await this.session.get(\n\t\t\t\t\t\turi: data.next\n\t\t\t\t\t)\n\t\t\t\t\tpages.push(...data.results)\n\t\t\t\treturn pages\n\t\tcatch error\n\t\t\tif error.code == 'ETIMEDOUT'\n\t\t\t\treturn this.getUrl(url, consume)\n\t\t\telse\n\t\t\t\tthrow error\n\n\t#: Post URL\n\n\tpostUrl: (url, data) ->\n\t\ttry\n\t\t\treturn await this.session.post(\n\t\t\t\turi: url\n\t\t\t\tbody: data\n\t\t\t\theaders: {\n\t\t\t\t\t...this.headers,\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t)\n\t\tcatch error\n\t\t\tthrow error\n\n\t#: Get Data from URL based on Condition\n\n\tgetDataFromUrl: (url, conditionFunc, args) ->\n\t\ttry\n\t\t\tresults = {}\n\t\t\tresKeys\n\t\t\thasArrayArgs = Array.isArray(args.args)\n\t\t\tdata = await this.session.get(\n\t\t\t\t\turi: url\n\t\t\t\t)\n\t\t\tresults = conditionFunc(data.results, args)\n\t\t\twhile data.next?\n\t\t\t\tdata = await this.session.get(\n\t\t\t\t\turi: data.next\n\t\t\t\t)\n\t\t\t\tres = conditionFunc(data.results, args)\n\t\t\t\tresults = { ...results, ...res }\n\t\t\t\tresKeys = Object.keys(results)\n\t\t\t\tif hasArrayArgs && args.args.length == resKeys.length\n\t\t\t\t\treturn results\n\t\t\t\telse if !hasArrayArgs && resKeys.length == 1\n\t\t\t\t\treturn results[resKeys[0]]\n\t\t\treturn results\n\t\tcatch error\n\t\t\tthrow error\n\n#: Sleep\n\nsleep = (time) ->\n  new Promise((resolve) ->\n    setTimeout(resolve, time)\n)\n\n#: New API Object\n\nnewApiObj = (args={ newLogin: false, configIndex: 0, print: false }) ->\n\targs = {\n\t\tnewLogin: false\n\t\tconfigIndex: 0\n\t\tprint: false\n\t\t...args\n\t}\n\treturn new Api(\n\t\tnewLogin: args.newLogin\n\t\tconfigIndex: args.configIndex\n\t\tprint: args.print\n\t)\n\n#: Exports\n\nmodule.exports = newApiObj\n\n#::: End Program :::"
  ]
}