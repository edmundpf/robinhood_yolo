{
  "version": 3,
  "file": "yolo.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "yolo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "com = require('commander')\nmoment = require('moment')\nterm = require('terminal-kit').terminal\nON_DEATH = require('death')\nroundNum = require('./miscFunctions').roundNum\ncolorPrint = require('./miscFunctions').colorPrint\nconfigData = require '../data/config.json'\ndefaults = require '../data/defaults.json'\nb64Dec = require('./miscFunctions').b64Dec\nb64Enc = require('./miscFunctions').b64Enc\nupdateJson = require('./miscFunctions').updateJson\noverwriteJson = require('./miscFunctions').overwriteJson\ninquirer = require('inquirer')\np = require 'print-tools-js'\nchalk = require 'chalk'\napi = require('./apiMaster')(\n\tnewLogin: false\n\tconfigIndex: 0\n\tprint: true\n)\n\n#: Main Program\n\nmain = ->\n\n\t#: Option Keys\n\n\tkeys = [\n\t\t'login'\n\t\t'ticker'\n\t\t'url'\n\t\t'id'\n\t\t'expiry'\n\t\t'option_type'\n\t\t'strike_type'\n\t\t'quantity'\n\t\t'price'\n\t\t'depth'\n\t\t'range'\n\t\t'command'\n\t]\n\n\t#: Options\n\n\tcom\n\t\t.option('-l, --login_index <login_index>', 'Change login config index', parseInt)\n\t\t.option('-t, --ticker <ticker>', 'Add option ticker')\n\t\t.option('-u, --url <url>', 'Add option URL')\n\t\t.option('-i, --id <id>', 'Add ID')\n\t\t.option('-e, --expiry <expiry>', 'Add option expiry')\n\t\t.option('-o, --option_type <option_type>', 'Add option type')\n\t\t.option('-s, --strike_type <strike_type>', 'Add option strike type')\n\t\t.option('-q, --quantity <quantity>', 'Add option contracts quantity', parseInt)\n\t\t.option('-p, --price <price>', 'Add option price', parsePrice)\n\t\t.option('-d, --depth <depth>', 'Add option depth', parseInt)\n\t\t.option('-r, --range <range>', 'Add option range', parseInt)\n\t\t.option('-c, --command <command>', 'Run command(s) [dashboard, show_accounts, add_account, edit_account, ' +\n\t\t\t'delete_account, trades, watch, stop_loss, quote, position, find, buy, sell, cancel, replace]')\n\t\t.action(() ->\n\n\t\t\ttry\n\n\t\t\t\t#: User Login Index\n\n\t\t\t\tif !com.login_index?\n\t\t\t\t\tcom.login_index = 0\n\t\t\t\tif configData.length > 0 && !com.command.includes('account')\n\t\t\t\t\tawait api.login(configIndex: com.login_index)\n\n\t\t\t\t#: List-type options parsing\n\n\t\t\t\tfor key in keys\n\t\t\t\t\tif com[key]? && ',' in com[key]\n\t\t\t\t\t\tcom[key] = com[key].split(',')\n\n\t\t\t\t#: Commands\n\n\t\t\t\tif com.command?\n\t\t\t\t\tif !Array.isArray(com.command)\n\t\t\t\t\t\tcom.command = [com.command]\n\t\t\t\t\tfor c in com.command\n\n\t\t\t\t\t\t#: Dashboard\n\n\t\t\t\t\t\tif c == 'dashboard'\n\t\t\t\t\t\t\tdashboardCom(com)\n\n\t\t\t\t\t\t#: Show Accounts\n\n\t\t\t\t\t\telse if c == 'show_accounts'\n\t\t\t\t\t\t\tshowAccountsCom(com)\n\n\t\t\t\t\t\t#: Add Account\n\n\t\t\t\t\t\telse if c == 'add_account'\n\t\t\t\t\t\t\taddAccountCom(com)\n\n\t\t\t\t\t\t#: Edit Account\n\n\t\t\t\t\t\telse if c == 'edit_account'\n\t\t\t\t\t\t\teditAccountCom(com)\n\n\t\t\t\t\t\t#: Delete Account\n\n\t\t\t\t\t\telse if c == 'delete_account'\n\t\t\t\t\t\t\tdeleteAccountCom(com)\n\n\t\t\t\t\t\t#: Trades\n\t\t\t\t\t\telse if c == 'trades'\n\t\t\t\t\t\t\ttradeCom(com)\n\n\t\t\t\t\t\t#: Position Watch\n\n\t\t\t\t\t\telse if c == 'watch'\n\t\t\t\t\t\t\tposWatchCom(com)\n\n\t\t\t\t\t\t#: Stop Loss\n\n\t\t\t\t\t\telse if c == 'stop_loss'\n\t\t\t\t\t\t\tstopLossWatch(com)\n\n\t\t\t\t\t\t#: Quotes\n\n\t\t\t\t\t\telse if c == 'quote'\n\t\t\t\t\t\t\tquoteCom(com)\n\n\t\t\t\t\t\t#: Position\n\n\t\t\t\t\t\telse if c == 'position'\n\t\t\t\t\t\t\tposCom(com)\n\n\t\t\t\t\t\t#: Find Options\n\n\t\t\t\t\t\telse if c == 'find'\n\t\t\t\t\t\t\tfindCom(com)\n\n\t\t\t\t\t\t#: Buy Option\n\n\t\t\t\t\t\telse if c == 'buy'\n\t\t\t\t\t\t\tbuyCom(com)\n\n\t\t\t\t\t\t#: Sell Option\n\n\t\t\t\t\t\telse if c == 'sell'\n\t\t\t\t\t\t\tsellCom(com)\n\n\t\t\t\t\t\t#: Cancel Option Order\n\n\t\t\t\t\t\telse if c == 'cancel'\n\t\t\t\t\t\t\tcancelCom(com)\n\n\t\t\t\t\t\t#: Replace Option Order\n\n\t\t\t\t\t\telse if c == 'replace'\n\t\t\t\t\t\t\treplaceCom(com)\n\n\t\t\tcatch error\n\t\t\t\tthrow error\n\t\t)\n\t\t.parse(process.argv)\n\n#::: Commands :::\n\n#: Dashboard Command\n\ndashboardCom = (com) ->\n\taccount = await api.getAccount()\n\ttransfers = await api.getTransfers()\n\twithdraws = deposits = 0\n\n\t# Transfers\n\n\tfor transfer in transfers\n\t\tif not transfer.scheduled and transfer.rhs_state == 'submitted' and transfer.direction == 'withdraw'\n\t\t\twithdraws += Number(transfer.amount)\n\t\tif not transfer.scheduled and transfer.rhs_state == 'submitted' and transfer.direction == 'deposit'\n\t\t\tdeposits += Number(transfer.amount)\n\n\t# Stats\n\n\tp.chevron(\"Buying Power: #{account.margin_balances.day_trade_buying_power}\", { log: false })\n\tp.chevron(\"Available for Withdrawal: #{account.margin_balances.cash_available_for_withdrawal}\", { log: false })\n\tp.chevron(\"Unsettled Funds: #{account.margin_balances.unsettled_funds}\", { log: false })\n\tp.chevron(chalk\"Deposits: {red $#{deposits}}\", { log: false })\n\tp.chevron(chalk\"Withdrawals: {green $#{withdraws}}\", { log: false })\n\n\t# Day Trades\n\n\tday_trades = await dayTrades()\n\tp.chevron(\"Day Trades: #{Object.keys(day_trades).length}\", { log: false })\n\tfor url, trade of day_trades\n\t\tp.bullet(\"#{trade.symbol}: #{trade.date}\", { indent: 1, log: false })\n\n#: Show Accounts Command\n\nshowAccountsCom = (com) ->\n\n\tfor i in [0...configData.length]\n\t\tp.chevron(\"Index #{i}: #{b64Dec(configData[i].u_n)} | #{b64Dec(configData[i].d_t)}\")\n\n#: Add Account Commmand\n\naddAccountCom = (com) ->\n\n\tp.success('This will add a new account to the config.')\n\n\ttry\n\t\tanswer = await inquirer.prompt([\n\t\t\t{\n\t\t\t\ttype: 'input'\n\t\t\t\tname: 'username'\n\t\t\t\tmessage: 'Enter username:'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'password'\n\t\t\t\tname: 'password'\n\t\t\t\tmessage: 'Enter password:'\n\t\t\t\tmask: true\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'input'\n\t\t\t\tname: 'device_token'\n\t\t\t\tmessage: 'Enter device token:'\n\t\t\t},\n\t\t])\n\t\tnewConfig =\n\t\t\td_t: b64Enc(answer.device_token)\n\t\t\tu_n: b64Enc(answer.username)\n\t\t\tp_w: b64Enc(answer.password)\n\t\t\ta_t: ''\n\t\t\tr_t: ''\n\t\t\ta_b: ''\n\t\t\ta_u: ''\n\t\t\tt_s: 0\n\t\tconfigData.push(newConfig)\n\t\tupdateJson(\n\t\t\t'../data/config.json',\n\t\t\tconfigData\n\t\t)\n\t\tp.success(\"#{answer.username} added successfully.\")\n\n\tcatch error\n\t\tp.error('Could not add account.')\n\n#: Edit Account Command\n\neditAccountCom = (com) ->\n\n\tp.success('This will edit account details in the config.')\n\n\ttry\n\n\t\taccounts = []\n\t\tfor account in configData\n\t\t\taccounts.push(b64Dec(account.u_n))\n\n\t\t#: Get Account\n\n\t\tacc = await inquirer.prompt([\n\t\t\t\ttype: 'rawlist'\n\t\t\t\tname: 'account'\n\t\t\t\tmessage: 'Which account would you like to edit?'\n\t\t\t\tchoices: accounts\n\t\t])\n\n\t\t#: Edit Account\n\n\t\tanswer = await inquirer.prompt([\n\t\t\t{\n\t\t\t\ttype: 'input'\n\t\t\t\tname: 'username'\n\t\t\t\tmessage: 'Enter username:'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'password'\n\t\t\t\tname: 'password'\n\t\t\t\tmessage: 'Enter password:'\n\t\t\t\tmask: true\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'input'\n\t\t\t\tname: 'device_token'\n\t\t\t\tmessage: 'Enter device token:'\n\t\t\t},\n\t\t])\n\t\tnewConfig =\n\t\t\td_t: b64Enc(answer.device_token)\n\t\t\tu_n: b64Enc(answer.username)\n\t\t\tp_w: b64Enc(answer.password)\n\n\t\tconfigData[accounts.indexOf(acc.account)] = {\n\t\t\t...configData[accounts.indexOf(acc.account)]\n\t\t\t...newConfig\n\t\t}\n\t\tupdateJson(\n\t\t\t'../data/config.json',\n\t\t\tconfigData\n\t\t)\n\t\tp.success(\"#{answer.username} edited successfully.\")\n\n\tcatch error\n\t\tp.error('Could not edit account.')\n\n#: Delete Account Command\n\ndeleteAccountCom = (com) ->\n\n\tp.success('This will delete an account from the config.')\n\n\ttry\n\n\t\taccounts = []\n\t\tfor account in configData\n\t\t\taccounts.push(b64Dec(account.u_n))\n\n\t\t#: Get Account\n\n\t\tif accounts.length > 0\n\t\t\tacc = await inquirer.prompt([\n\t\t\t\t\ttype: 'rawlist'\n\t\t\t\t\tname: 'account'\n\t\t\t\t\tmessage: 'Which account would you like to delete from the config?'\n\t\t\t\t\tchoices: accounts\n\t\t\t])\n\n\t\t\tconfigData.splice(accounts.indexOf(acc.account), 1)\n\t\t\toverwriteJson(\n\t\t\t\t'../data/config.json',\n\t\t\t\tconfigData\n\t\t\t)\n\t\t\tp.success(\"#{acc.account} deleted successfully.\")\n\t\telse\n\t\t\tp.error(\"Config has no accounts.\")\n\n\tcatch error\n\t\tp.error('Could not delete account.')\n\t\tconsole.log(error)\n\n#: Trades Command\n\ntradeCom = (com) ->\n\ttrades = {}\n\tamt = gains = losses = wins = defeats = 0\n\tp.success(\"Getting trade history for #{api.username}\")\n\toptions = await api.optionsOrders()\n\tfor option in options\n\t\tdate = time = ''\n\t\tif option.state != 'cancelled'\n\t\t\tif option.direction == 'credit'\n\t\t\t\tamt = Number(option.processed_premium)\n\t\t\telse if option.direction == 'debit'\n\t\t\t\tamt = if Number(option.processed_premium) != 0 then Number(option.processed_premium) * -1 else 0\n\t\t\ttry\n\t\t\t\tcur_time = moment(option.legs[0].executions[0].timestamp)\n\t\t\t\tdate = cur_time.format('YYYY/MM/DD')\n\t\t\t\ttime = cur_time.format('HH:mm:ss')\n\t\t\turl = option.legs[0].option\n\t\t\tif !trades[url]?\n\t\t\t\ttrades[url] =\n\t\t\t\t\tamt: amt\n\t\t\t\t\tsymbol: option.chain_symbol\n\t\t\t\t\tdate: date\n\t\t\t\t\ttime: time\n\t\t\telse\n\t\t\t\ttrades[url].amt += amt\n\t\t\t\tif trades[url].time == '' && time != ''\n\t\t\t\t\ttrades[url].time = time\n\n\tfor url, trade of trades\n\t\tamtColor = 'green'\n\t\tdata = await api.getUrl(url)\n\t\tObject.assign(\n\t\t\ttrade,\n\t\t\tstrikePrice: data.strike_price\n\t\t\texpirationDate: data.expiration_date\n\t\t\toptionType: data.type\n\t\t\texpirationDate: data.expiration_date\n\t\t)\n\t\tif trade.amt >= 0\n\t\t\tgains += trade.amt\n\t\t\twins += 1\n\t\telse if trade.amt < 0\n\t\t\tamtColor = 'red'\n\t\t\tlosses += trade.amt\n\t\t\tdefeats += 1\n\t\tamt = roundNum(trade.amt)\n\t\tp.bullet(chalk\"#{trade.symbol}-#{trade.date}-#{trade.optionType}: {#{amtColor} $#{amt}}\", { log: false })\n\n\tnet = gains + losses\n\tp.chevron(chalk\"{green Gains}: #{gains}\", { log: false })\n\tp.chevron(chalk\"{red Losses}: #{losses}\", { log: false })\n\tif wins >= defeats\n\t\tp.arrow(chalk\"Record: {green #{wins}-#{defeats}}\", { log: false })\n\telse\n\t\tp.arrow(chalk\"Record: {red #{wins}-#{defeats}}\", { log: false })\n\tif net >= 0\n\t\tp.arrow(chalk\"Net: {green #{net}}\", { log: false })\n\telse\n\t\tp.arrow(chalk\"Net: {red #{net}}\", { log: false })\n\n#: Position Watch Command\n\nposWatchCom = (com) ->\n\tp.success('Getting open positions')\n\tpositions = await api.optionsPositions(\n\t\tmarketData: true\n\t\torderData: true\n\t)\n\n\tsetInterval(() =>\n\t\ttry\n\t\t\tspy_quote = await api.quotes('SPY')\n\t\t\tspyPrice = if (cur_time >= 93000 && cur_time < 160000) then roundNum(spy_quote.last_trade_price, 3) else roundNum(spy_quote.last_extended_hours_trade_price, 3)\n\t\t\tspyLog = p.bullet(\"SPY: #{spyPrice} | Bid - #{spy_quote.bid_size} | Ask - #{spy_quote.ask_size}\", { ret: true })\n\n\t\t\tposText = ''\n\t\t\tfor pos in positions\n\t\t\t\tpos_quote = await api.quotes(pos.chain_symbol)\n\t\t\t\tpos_market = await api.marketData(pos.option_data.id)\n\n\t\t\t\tsymbol = pos.chain_symbol\n\t\t\t\tcur_time = Number(moment().format('HHmmss'))\n\t\t\t\toption_type = if pos.option_data.type == 'call' then 'C' else 'P'\n\t\t\t\tstrike = roundNum(pos.option_data.strike_price, 1)\n\t\t\t\texpiry = pos.option_data.expiration_date.replace(/-/g, '/')\n\t\t\t\tquote = if (cur_time >= 93000 && cur_time < 160000) then roundNum(pos_quote.last_trade_price, 3) else roundNum(pos_quote.last_extended_hours_trade_price, 3)\n\t\t\t\tprice = roundNum(pos_market.adjusted_mark_price, 3)\n\t\t\t\task_price = roundNum(pos_market.ask_price)\n\t\t\t\task_count = pos_market.ask_size\n\t\t\t\tbid_price = roundNum(pos_market.bid_price)\n\t\t\t\tbid_count = pos_market.bid_size\n\t\t\t\tdelta = roundNum(pos_market.delta, 3)\n\t\t\t\ttheta = roundNum(pos_market.theta, 3)\n\t\t\t\tvolatility = roundNum(pos_market.implied_volatility, 3)\n\t\t\t\tvolume = pos_market.volume\n\n\t\t\t\tposLog = p.bullet(\n\t\t\t\t\t\"#{symbol}-#{option_type}-#{strike}-#{expiry} | Price: #{price} | Quote: #{quote}\",\n\t\t\t\t\tret: true\n\t\t\t\t\tlog: false\n\t\t\t\t)\n\t\t\t\tposDet = p.chevron(\n\t\t\t\t\t\"Bid: #{bid_price} x #{bid_count} | Ask: #{ask_price} x #{ask_count} | Volume: #{volume} | Δ: #{delta} | θ: #{theta} | IV: #{volatility}\",\n\t\t\t\t\tret: true\n\t\t\t\t\tlog: false\n\t\t\t\t\tindent: 1\n\t\t\t\t)\n\t\t\t\tposUrl = p.arrow(\n\t\t\t\t\t\"URL: #{pos.option}\"\n\t\t\t\t\tret: true\n\t\t\t\t\tlog: false\n\t\t\t\t\tindent: 1\n\t\t\t\t)\n\t\t\t\tposText += \"#{posLog}\\n#{posDet}\\n#{posUrl}\\n\"\n\n\t\t\tprintInPlace(\"#{spyLog}\\n#{posText}\")\n\n\t\tcatch error\n\n\t, 2000)\n\n#: Stop Loss Watch\n\nstopLossWatch = (com) ->\n\tp.success('Getting open positions')\n\tday_trades = await dayTrades()\n\tTRADE_COUNT = Object.keys(day_trades).length\n\tMAX_LOSS = defaults.stopLoss\n\tmarket_time = moment()\n\tpos_data = {}\n\n\tp.success(\"Starting stop-loss watch: #{market_time.format('HH:mm:ss')}\")\n\tmarket_time = market_time.format('HHmmss')\n\n\tif market_time < 93000 || market_time > 160000\n\t\tp.error('Exiting stop-loss watch, market is not currently open.')\n\telse if market_time >= 93000 && market_time < defaults.poorFillTime\n\t\tanswer = await inquirer.prompt([\n\t\t\t\ttype: 'rawlist'\n\t\t\t\tname: 'continue'\n\t\t\t\tmessage: 'Market has just opened and stop-loss could trigger poor fills due to low volume. Continue?'\n\t\t\t\tchoices: ['Yes', 'No']\n\t\t])\n\t\tif answer.continue == 'No'\n\t\t\tp.error('Exiting stop-loss watch.')\n\t\t\treturn false\n\n\tsetInterval(() =>\n\t\ttry\n\t\t\tpositions = await api.optionsPositions(\n\t\t\t\tmarketData: true\n\t\t\t)\n\t\t\tposText = ''\n\t\t\topenPos = []\n\t\t\tfor pos in positions\n\n\t\t\t\t# Data\n\n\t\t\t\tsymbol = pos.chain_symbol\n\t\t\t\toption_type = if pos.option_data.type == 'call' then 'C' else 'P'\n\t\t\t\tstrike = roundNum(pos.option_data.strike_price, 1)\n\t\t\t\texpiry = pos.option_data.expiration_date.replace(/-/g, '/')\n\n\t\t\t\tcurrent_price = Number(pos.market_data.adjusted_mark_price)\n\t\t\t\tbuy_price = Number(pos.average_price) / 100\n\t\t\t\tbid_price = Number(pos.market_data.bid_price)\n\t\t\t\thigh = if current_price > buy_price then current_price else buy_price\n\t\t\t\tstop_loss = 0\n\t\t\t\topenPos.push(pos.id)\n\n\t\t\t\t# Data Collection\n\n\t\t\t\tif !pos_data[pos.id]?\n\t\t\t\t\tpos_data[pos.id] =\n\t\t\t\t\t\tprice: buy_price\n\t\t\t\t\t\thigh: high\n\t\t\t\t\t\tstatus: 'open'\n\t\t\t\t\t\tsell_id: null\n\t\t\t\telse\n\t\t\t\t\tif pos_data[pos.id].high < high\n\t\t\t\t\t\tpos_data[pos.id].high = high\n\n\t\t\t\t# Sell Arguments\n\n\t\t\t\tsell_args =\n\t\t\t\t\turl: pos.option\n\t\t\t\t\tquantity: pos.quantity\n\t\t\t\t\tprice: bid_price\n\t\t\t\t\tid: pos_data[pos.id].id\n\n\t\t\t\tcur_pos = pos_data[pos.id]\n\n\t\t\t\t# High < Price * 1.1\n\n\t\t\t\tif cur_pos.high < (cur_pos.price * (1 + MAX_LOSS / 2))\n\t\t\t\t\tstop_loss = roundNum(cur_pos.high - (cur_pos.price * MAX_LOSS))\n\t\t\t\t\tif current_price <= stop_loss\n\t\t\t\t\t\tp.error(\n\t\t\t\t\t\t\t\"Stop-Loss (Max Loss) triggered: Symbol: #{symbol} | Current Price: #{current_price} | Bid Price: #{bid_price} | Stop Loss: #{stop_loss}\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\tif TRADE_COUNT < 3\n\t\t\t\t\t\t\tterminatePosition(cur_pos, sell_args)\n\n\t\t\t\t# High >= Price * 1.1 && High < Price * 1.2\n\n\t\t\t\telse if cur_pos.high >= (cur_pos.price * (1 + MAX_LOSS / 2)) && cur_pos.high < (cur_pos.price * (1 + MAX_LOSS))\n\t\t\t\t\tstop_loss = roundNum(cur_pos.price + 0.01)\n\t\t\t\t\tif current_price <= stop_loss\n\t\t\t\t\t\tposText += p.error(\n\t\t\t\t\t\t\t\"Stop-Loss (Prevent Defeat) triggered: Symbol: #{symbol} | Current Price: #{current_price} | Bid Price: #{bid_price} | Stop Loss: #{stop_loss}\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\tif TRADE_COUNT < 3\n\t\t\t\t\t\t\tterminatePosition(cur_pos, sell_args)\n\n\t\t\t\t# High >= Price * 1.2\n\n\t\t\t\telse if cur_pos.high >= (cur_pos.price * (1 + MAX_LOSS))\n\t\t\t\t\tstop_loss = if (cur_pos.high - (cur_pos.price * MAX_LOSS)) >= (current_price + 0.01) then roundNum(cur_pos.high - (cur_pos.price * MAX_LOSS)) else roundNum(current_price + 0.01)\n\t\t\t\t\tif current_price <= stop_loss\n\t\t\t\t\t\tposText += p.error(\n\t\t\t\t\t\t\t\"Stop-Loss (Preserve Gains) triggered: Symbol: #{symbol} | Current Price: #{current_price} | Bid Price: #{bid_price} | Stop Loss: #{stop_loss}\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\tif TRADE_COUNT < 3\n\t\t\t\t\t\t\tterminatePosition(cur_pos, sell_args)\n\n\t\t\t\t# Log\n\n\t\t\t\tposLog = p.chevron(\n\t\t\t\t\t\"#{symbol}-#{option_type}-#{strike}-#{expiry} | Buy Price: #{buy_price}\",\n\t\t\t\t\tret: true\n\t\t\t\t\tlog: false\n\t\t\t\t)\n\t\t\t\tposDet = p.bullet(\n\t\t\t\t\t\"Current Price: #{current_price} | Bid Price: #{bid_price} | Stop Loss: #{stop_loss}\"\n\t\t\t\t\tret: true\n\t\t\t\t\tlog: false\n\t\t\t\t\tindent: 1\n\t\t\t\t)\n\t\t\t\tposText += \"#{posLog}\\n#{posDet}\\n\"\n\n\t\t\tsoldPosition = false\n\t\t\tfor id, pos of pos_data\n\t\t\t\tif !openPos.includes(id) && pos.status == 'selling'\n\t\t\t\t\tsoldPosition = true\n\t\t\t\t\tdelete pos_data[id]\n\t\t\tif soldPosition\n\t\t\t\tday_trades = await dayTrades()\n\t\t\t\tTRADE_COUNT = Object.keys(day_trades).length\n\n\t\t\tprintInPlace(posText)\n\n\t\tcatch error\n\n\t, 5000)\n\n#: Quote Command\n\nquoteCom = (com) ->\n\tp.success(\"Getting quote for #{com.ticker}\")\n\tdata = await api.quotes(com.ticker)\n\tprintQuotes(data)\n\n#: Position Command\n\nposCom = (com) ->\n\tp.success('Getting open positions')\n\tdata = await api.optionsPositions(\n\t\tmarketData: true\n\t\torderData: true\n\t)\n\tprintPos(data)\n\tp.success('Getting unfilled orders')\n\tdata = await api.optionsPositions(\n\t\tmarketData: true\n\t\torderData: true\n\t\topenOnly: false\n\t\tnotFilled: true\n\t)\n\tprintPos(data, true)\n\n#: Find Command\n\nfindCom = (com) ->\n\targs =\n\t\tsymbol: com.ticker\n\t\texpiry: com.expiry\n\t\toptionType: com.option_type || 'call'\n\t\tstrikeType: com.strike_type || 'itm'\n\t\tstrikeDepth: com.depth || 0\n\t\trange: com.range\n\t\tprice: com.price\n\n\tif !args.range? && !args.price?\n\t\tp.success(\"Finding option #{args.symbol}-#{args.expiry.replace(/-/g, '/')}-#{args.optionType}-#{args.strikeType}-#{args.strikeDepth}\")\n\telse if args.price?\n\t\tp.success(\"Finding option #{args.symbol}-#{args.expiry.replace(/-/g, '/')}-#{args.optionType}-#{args.price}\")\n\telse if args.range?\n\t\tp.success(\"Finding option #{args.symbol}-#{args.expiry.replace(/-/g, '/')}-#{args.optionType}-(+-#{args.range})\")\n\n\tdata = await api.findOptions(\n\t\targs.symbol\n\t\targs.expiry\n\t\toptionType: args.optionType\n\t\tstrikeType: args.strikeType\n\t\tstrikeDepth: args.strikeDepth\n\t\trange: args.range\n\t\tstrike: args.price\n\t\tmarketData: true\n\t)\n\tprintFind(data)\n\n#: Buy Command\n\nbuyCom = (com) ->\n\toption = await api.getUrl(com.url)\n\tp.success(\"Attempting to buy #{option.chain_symbol}-#{option.expiration_date}-#{option.type}-#{option.strike_price}\")\n\tbuy = await api.placeOptionOrder(com.url, com.quantity, com.price)\n\tquote = await api.quotes(option.chain_symbol)\n\tif buy.id?\n\t\tp.success('Order placed successfully')\n\t\tprintOrder(option, quote, buy)\n\t\treturn buy\n\telse\n\t\tp.error('Could not place order!')\n\t\treturn false\n\n#: Sell Command\n\nsellCom = (com) ->\n\toption = await api.getUrl(com.url)\n\tp.success(\"Attempting to sell #{option.chain_symbol}-#{option.expiration_date}-#{option.type}-#{option.strike_price}\")\n\tsell = await api.placeOptionOrder(\n\t\tcom.url,\n\t\tcom.quantity,\n\t\tcom.price\n\t\tdirection: 'credit'\n\t\tside: 'sell'\n\t\tpositionEffect: 'close'\n\t)\n\tquote = await api.quotes(option.chain_symbol)\n\tif sell.id?\n\t\tp.success('Order placed successfully')\n\t\tprintOrder(option, quote, sell)\n\t\treturn sell\n\telse\n\t\tp.error('Could not place order!')\n\t\treturn false\n\n#: Cancel Command\n\ncancelCom = (com) ->\n\tp.success(\"Attempting to cancel option order\")\n\tdata = await api.cancelOptionOrder(com.url)\n\tif data\n\t\tp.success('Order cancelled successfully')\n\t\treturn true\n\n#: Replace Command\n\nreplaceCom = (com) ->\n\torder = await api.optionsOrders({ id: com.id })\n\toption = await api.getUrl(order.legs[0].option)\n\tp.success(\"Attempting to replace order #{option.chain_symbol}-#{option.expiration_date}-#{option.type}-#{option.strike_price}\")\n\tbuy = await api.replaceOptionOrder(com.quantity, com.price, { order: order })\n\tquote = await api.quotes(option.chain_symbol)\n\tif buy.id?\n\t\tp.success('Order replaced successfully')\n\t\tprintOrder(option, quote, buy)\n\t\treturn buy\n\telse\n\t\tp.error('Could not replace order!')\n\t\treturn false\n\n#::: Print Methods :::\n\n#: Print Quotes\n\nprintQuotes = (data) ->\n\tif !Array.isArray(data)\n\t\tdata = [data]\n\tfor rec in data\n\t\tobj =\n\t\t\tsymbol: rec.symbol\n\t\t\taskSize: rec.ask_size\n\t\t\tbidSize: rec.bid_size\n\t\t\tprice: rec.last_trade_price\n\t\t\textendedPrice: rec.last_extended_hours_trade_price\n\t\tobjOrder = ['symbol', 'price', 'extendedPrice', 'askSize', 'bidSize']\n\t\tcolorPrint(\n\t\t\tobj,\n\t\t\tobjOrder,\n\t\t)\n\n#: Print Position\n\nprintPos = (data, notFilled=false) ->\n\tfor rec in data\n\t\tobj =\n\t\t\tsymbol: rec.chain_symbol\n\t\t\tbuyPrice: rec.average_price\n\t\t\tstrikePrice: rec.option_data.strike_price\n\t\t\texpiry: rec.option_data.expiration_date\n\t\t\tquantity: rec.quantity\n\t\t\ttype: rec.order_data.opening_strategy\n\t\t\tbidPrice: rec.market_data.bid_price\n\t\t\tbidSize: rec.market_data.bid_size\n\t\t\taskPrice: rec.market_data.ask_price\n\t\t\taskSize: rec.market_data.ask_size\n\t\t\toptionPrice: rec.market_data.adjusted_mark_price\n\t\t\tvolume: rec.market_data.volume\n\t\t\topenInterest: rec.market_data.open_interest\n\t\t\timpliedVolatility: rec.market_data.implied_volatility\n\t\t\tdelta: rec.market_data.delta\n\t\t\ttheta: rec.market_data.theta\n\t\t\torderId: rec.order_data.id\n\t\t\toptionUrl: rec.option\n\t\tobjOrder = ['symbol', 'buyPrice', 'strikePrice', 'expiry', 'quantity',\n\t\t\t'type', 'delta', 'theta', 'bidPrice', 'bidSize', 'askPrice', 'askSize',\n\t\t\t'optionPrice', 'volume', 'openInterest', 'impliedVolatility', 'orderId',\n\t\t\t'optionUrl']\n\t\tif notFilled\n\t\t\tobj.cancelUrl = rec.order_data.cancel_url\n\t\t\tobjOrder.push('cancelUrl')\n\t\tcolorPrint(\n\t\t\tobj,\n\t\t\tobjOrder,\n\t\t)\n\n#: Print Find Options\n\nprintFind = (data) ->\n\tif !Array.isArray(data)\n\t\tdata = [data]\n\tfor rec in data\n\t\tobj =\n\t\t\tsymbol: rec.chain_symbol\n\t\t\tstrikePrice: rec.strike_price\n\t\t\texpiry: rec.expiration_date\n\t\t\tbidPrice: rec.market_data.bid_price\n\t\t\tbidSize: rec.market_data.bid_size\n\t\t\taskPrice: rec.market_data.ask_price\n\t\t\taskSize: rec.market_data.ask_size\n\t\t\toptionPrice: rec.market_data.adjusted_mark_price\n\t\t\tvolume: rec.market_data.volume\n\t\t\topenInterest: rec.market_data.open_interest\n\t\t\timpliedVolatility: rec.market_data.implied_volatility\n\t\t\tdelta: rec.market_data.delta\n\t\t\ttheta: rec.market_data.theta\n\t\t\turl: rec.url\n\t\tobjOrder = ['symbol', 'strikePrice', 'expiry', 'delta', 'theta',\n\t\t\t'bidPrice', 'bidSize', 'askPrice', 'askSize', 'optionPrice',\n\t\t\t'volume', 'openInterest', 'impliedVolatility', 'url']\n\t\tcolorPrint(\n\t\t\tobj,\n\t\t\tobjOrder,\n\t\t)\n\n#: Print Order\n\nprintOrder = (option, quote, buy) ->\n\tobj =\n\t\tsymbol: buy.chain_symbol\n\t\tstrategy: buy.opening_strategy\n\t\tstrikePrice: option.strike_price\n\t\texpiry: option.expiration_date\n\t\tprice: buy.price\n\t\tquote: quote.last_trade_price\n\t\tquantity: buy.quantity\n\t\tcancelUrl: buy.cancel_url\n\t\torderId: buy.id\n\tobjOrder = ['symbol', 'strategy', 'expiry', 'strikePrice',\n\t\t'price', 'quote', 'quantity', 'cancelUrl', 'orderId']\n\tcolorPrint(\n\t\tobj,\n\t\tobjOrder,\n\t)\n\n#::: Helpers :::\n\n#: Parse Int\n\nparseInt = (val) ->\n\treturn Number(val)\n\n#: Parse Price\n\nparsePrice = (val) ->\n\treturn roundNum(val)\n\n#: Print in Place\n\nprintInPlace = (text) ->\n\tterm.saveCursor()\n\tprocess.stdout.write(\"#{text}\\r\")\n\tterm.restoreCursor()\n\n#: Terminate Position\n\nterminatePosition = (cur_pos, sell_args) ->\n\tif cur_pos.status == 'open'\n\t\torder = await sellCom(sell_args)\n\t\tcur_pos.status = 'selling'\n\t\tcur_pos.sell_id = order.id\n\telse if cur_pos.status == 'selling'\n\t\torder = await replaceCom(sell_args)\n\t\tcur_pos.sell_id = order.id\n\n#: Get Day Trades\n\ndayTrades = () ->\n\torders = await api.optionsOrders()\n\tcutoff_date = 0\n\tday_trades = {}\n\tdays = []\n\tfor i in [0...14]\n\t\tif days.length < 5\n\t\t\tdate = moment().subtract(i, 'days').format('YYYY-MM-DD')\n\t\t\tdate_status = await api.getMarketHours(date)\n\t\t\tif date_status.is_open? && date_status.is_open\n\t\t\t\tdays.push(date_status.date)\n\t\t\tif days.length == 5\n\t\t\t\tcutoff_date = Number(moment().subtract(i, 'days').format('YYYYMMDD'))\n\t\telse\n\t\t\tbreak\n\tfor i in [0...orders.length]\n\t\tif orders[i].legs[0].executions.length >= 1 && Number(moment(orders[i].legs[0].executions[0].timestamp).format('YYYYMMDD')) < cutoff_date\n\t\t\tbreak\n\t\tif orders[i].state == 'filled' && orders[i].legs[0].executions.length >= 1 && orders[i].legs[0].side == 'sell' && orders[i].legs[0].position_effect == 'close'\n\t\t\tsell_date = moment(orders[i].legs[0].executions[0].timestamp).format('YYYY-MM-DD')\n\t\t\tif days.includes(sell_date)\n\t\t\t\tfor x in [(i + 1)...orders.length]\n\t\t\t\t\tif orders[i].option == orders[x].option && orders[x].legs[0].executions.length >= 1 && orders[x].legs[0].side == 'buy' && orders[x].legs[0].position_effect == 'open'\n\t\t\t\t\t\tbuy_date = moment(orders[x].legs[0].executions[0].timestamp).format('YYYY-MM-DD')\n\t\t\t\t\t\tif buy_date == sell_date\n\t\t\t\t\t\t\tday_trades[orders[i].legs[0].option] =\n\t\t\t\t\t\t\t\tdate: sell_date\n\t\t\t\t\t\t\t\tsymbol: orders[i].chain_symbol\n\t\t\t\t\t\tbreak\n\treturn day_trades\n\n#: Run Program\n\nON_DEATH((signal, err) ->\n\tterm.eraseDisplayBelow()\n\tprocess.exit()\n)\n\nmain()\n\n#::: End Program :::"
  ]
}