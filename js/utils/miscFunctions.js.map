{
  "version": 3,
  "file": "miscFunctions.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "miscFunctions.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "path = require 'path'\nutf8 = require 'utf8'\nbase64 = require 'base-64'\nchalk = require 'chalk'\np = require 'print-tools-js'\ncamelCase = require 'lodash/camelCase'\nstartCase = require 'lodash/startCase'\neditJson = require 'edit-json-file'\njsonFile = require 'jsonfile'\n\n#: Base64 Decode\n\nb64Dec = (text) ->\n\treturn base64.decode(utf8.encode(text))\n\n#: Base64 Encode\n\nb64Enc = (text) ->\n\treturn base64.encode(utf8.encode(text))\n\n#: Round Number\n\nroundNum = (number, places=2) ->\n\treturn parseFloat(String(number)).toFixed(places)\n\n#: Title Case\n\ntitleCase = (text) ->\n\treturn startCase(camelCase(text))\n\n#: Print Detail\n\ndetPrint = (text) ->\n\tif typeof text == 'object'\n\t\tconsole.log(JSON.stringify(text))\n\t\treturn true\n\telse\n\t\treturn console.log(text)\n\t\treturn true\n\n#: Update JSON File\n\nupdateJson = (filename, obj) ->\n\ttry\n\t\tfile = editJson(path.join(__dirname, filename), { autosave: true })\n\t\tfor key, value of obj\n\t\t\tfile.set(key, value)\n\t\treturn true\n\tcatch error\n\t\tthrow error\n\n#: Overwrite JSON File\n\noverwriteJson = (filename, obj) ->\n\ttry\n\t\tfile = path.join(__dirname, filename)\n\t\tjsonFile.writeFileSync(file, obj, { spaces: 2 })\n\tcatch error\n\t\tthrow error\n\n#: Sort Options\n\nsortOptions = (a, b) ->\n\taStrike = Number(a.strike_price)\n\tbStrike = Number(b.strike_price)\n\tif (aStrike > bStrike)\n\t\treturn -1\n\telse if (bStrike > aStrike)\n\t\treturn 1\n\telse\n\t\treturn 0\n\n#: Query String\n\nqueryStr = (obj) ->\n\tobjLength = Object.keys(obj).length\n\tstr = ''\n\ti = -1\n\tfor key, value of obj\n\t\ti++\n\t\tif i == 0\n\t\t\tstr += '?'\n\t\tstr += \"#{key}=#{value}\"\n\t\tif i != (objLength - 1)\n\t\t\tstr += '&'\n\treturn str\n\n#: Color Print Dictionary\n\ncolorPrint = (obj, objOrder, args={ message: null, printSpace: true, places: 3 }) ->\n\tcolors = [\n\t\t'green'\n\t\t'yellow'\n\t\t'blue'\n\t\t'magenta'\n\t\t'cyan'\n\t\tnull\n\t\t'gray'\n\t\t'red'\n\t]\n\tcolMod = colors.length\n\tif args.message?\n\t\tp.success(args.message)\n\tfor i in [0...objOrder.length]\n\t\tval = obj[objOrder[i]]\n\t\tif String(val).includes('.') && !isNaN(val)\n\t\t\tval = roundNum(val, args.places)\n\t\tif colors[i % colMod] == null\n\t\t\tp.bullet(\"#{titleCase(objOrder[i])}: #{val}\", { log: false})\n\t\telse\n\t\t\tp.bullet(chalk\"{#{colors[i % colMod]} #{titleCase(objOrder[i])}}: #{val}\", { log: false})\n\tif args.printSpace\n\t\tconsole.log('')\n\treturn true\n\n#: Exports\n\nmodule.exports =\n\tqueryStr: queryStr\n\tb64Dec: b64Dec\n\tb64Enc: b64Enc\n\tcolorPrint: colorPrint\n\tupdateJson: updateJson\n\toverwriteJson: overwriteJson\n\tdetPrint: detPrint\n\troundNum: roundNum\n\tsortOptions: sortOptions\n\n#::: End Program:::"
  ]
}